
var codes =[  //测试数据  2018.8.25
	{
		author  :"gogo",
		codeView:"0",          //默认是否显示代码
		title:"GoC命令测试",   //标题
		//path :"演示1\\media\\", //重要路径参数：图片、声音..数据目录路径。
		gocURL:"..\\gocWeb.html",   //对应的单机版goc的路径
	},
	{
		title: "基本画图命令---fd、bk、rt、lt",
		detail: "前进、后退、左转、右转是GoC绘图的最基本命令。",
		code :[ 
			"//程序名：前进转弯测试",
			"int main(){",
			"  pen.speed(3).fd(100).rt(90).fd(-100).rt(-90);",
			"  pen.bk(200).lt(90).bk(-100).lt(-90);",
			"  return 0;",
			"}",
			],
		pic: "media\\p1.png",
	},
	{
		title: "设置笔状态命令(1)---c、rgb、size",
		detail: "颜色(color)通常有编号0到15，具体可看色号板。<br>rgb命令是自定义第16号颜色。<br>size改变笔的粗细，笔头默认是圆形。",
		code : [
			"//程序名：笔的颜色、粗细测试",
			"int main(){",  
			"  pen.rgb(255,205,165).speed(6).hide();",
			"  for(int i=0; i<17; i++) ",
			"    pen.size(i*2+1).c(i).fd(200).bk(200).rt(360.0/17);",
			"    pen.c(1).size(1).fd(200);",
			"  for (int i=0; i<150; i++)",
			"    pen.size(i).fd(1);",
			"  return 0;",
			"}",
		],
		pic: "media\\p2.png",
	},
	{
		title: "设置笔状态命令(2)---up、down",
		detail: "抬笔、落笔可改变fd是否画图。<br>不影响r,rr,o,oo,text等命令。",
		code : [
			"//程序名：抬笔、落笔测试",
			"int main(){",  
			"  pen.speed(5).fd(200).size(8);",
			"  for(int i=0; i<30; i++) ",
			"    pen.c(i).up().fd(20).down().fd(20).rt(360.0/30);",
			"  return 0;",
			"}",
		],
		pic: "media\\p3.png",
	},
	{
		title: "状态命令(1)---show、hide,speed,wait",
		detail: "显示、隐藏笔、设置画笔速度、等待命令可以控制绘图的节奏。<br>pen.speed(10)时，速度最快。",
		code : [
			"//程序名：显示、隐藏、速度测试",
			"int main(){",  		
			"  pen.c(3).size(20).show();",			
			"  for(int i=1; i<=10; i++)",
			"    pen.speed(i+1).fd(100).rt(360.0/10);",
			"  wait(3);",
			"  pen.c(1).size(10).hide();",
			"  for(int i=1; i<=10; i++)",
			"    pen.speed(i+1).fd(100).rt(360.0/10);",

			"  return 0;",
			"}",
		],
		pic: "media\\p4.png",
	},
	{
		title: "状态命令(2)---showXY,pause,cls...",
		detail: "showXY,pause,cls,clsRec命令测试。<br>显示坐标、暂停命令对演示程序很有用。<br>清屏幕可以用于重新绘图，可以有动画感。",
		code : [
			"//程序名：坐标、清屏、等待按键测试",
			"int main(){",  		
			'  pen.text("画间距200,颜10,粗细2的坐标",10,40);', 
			'  pen.text("等5秒或按任意键或鼠标继续",1,30,0,0,-100);',
			"  pause(5);",
			"  pen.cls().showXY(200,10,2).speed(3);",
			"  pen.fd(100).rt(90).fd(90);",
			'  pen.text("100是间距的一半。按任意键或鼠标继续",1,30,0,0,-100);',
			"  pause();",
			"  p.clsRec(-200,200,200,400,5);",
			'  pen.text("用黄色清理了一个矩形",14,30,0,0,-150);',			
			"  pause(2.5);",
			"  p.clsRec(-200,200,100,200);",
			'  pen.text("无色清空矩形的颜色",8,30,0,0,-210);',						
			"  return 0;",
			"}",
		],
		pic: "media\\p5.png",
	},

	{
		title: "增强画图命令---o,oo,e,ee,r,rr",
		detail: "画园、椭圆、矩形命令，不受up()命令影响。<br>参数为半径，可以画实心和指定颜色。",
		code : [
			"//程序名：圆、椭圆、矩形命令测试",
			"int main(){",  		   
			"  p.hide();",
			"  for (int i=10; i<100; i=i+5){",
			"	  p.cls().e(200,i,14).oo(i,0);",
			"	  wait(0.03);",
			"  }",
			"  pause(2);",
			"  p.cls().lt(90);",
			"  for (int i=0; i<6; i++){",
			"	  p.fd(300).ee(30,60,14).rr(20,40,15);",
			"	  p.r(20,40,13).bk(200).rt(60);",
			"  }",			
			"  return 0;",
			"}",
		],
		pic: "media\\p6.png",
	},

	{
		title: "坐标命令(1)---moveTo,lineTo",
		detail: "moveTo(x,y)改变pen到(x,y)位置，不画线。<br>lineTo(x,y)是从当前pen的位置连线到(x,y)位置。<br>不改变pen的方向。",
		code : [
			"//程序名：移动到、连线到坐标命令测试",
			"int main(){",  		   
			"  p.size(8);",
			"  for (int i=0; i<4; i++)",
			"	  p.fd(300).rt(90);",
			"  p.speed(5).size(2);",
			"  for (int i=0; i<=300; i=i+20){",
			"	  p.moveTo(0,300-i).c(3).lineTo(i,0);",
			"	  p.c(4).lineTo(300,i);",
			"  }",
			"  return 0;",
			"}",
		],
		pic: "media\\p7.png",
	},

	{
		title: "坐标命令(2)---getX,getY,getAngle...",
		detail: "getX,getY,getAngle,setAngle函数测试。<br>getX获取pen位置的X坐标。getY获取pen位置的Y坐标。<br>getAngle获取pen的角度。<br>setAngle把pen的角度设置为指定的角度。",
		code : [
			"//程序名：获取坐标、角度函数测试",
			"int main(){",  		   
		    "//画正方形的外接圆,圆半径200",
			"  p.oo(200,9).showXY(100,2,1);",
			"  p.speed(4).c(1).rt(45).fd(200);",
			"  double x=p.getX();",
			"  p.text(x,0);",
			"  pause(3);",
			"  p.rt(135).fd(x).text(x,0);",
			"  p.rt(90).fd(x);",
			"  pause(3);",
			"  p.r(2*x,2*x,4);",
			"  return 0;",
			"}",
		],
		pic: "media\\p8.png",
	},
	{
		title: "文字命令(1)---text,textSize,font",
		detail: "text显示文字和数；text有多种命令格式。<br>textSize设置字大小。font设置字体。",
		code : [
			"//程序名：显示文字命令测试",
			"int main(){",  		   
			"  p.speed(3).up().text(333+333);",
			'  p.fd(50).c(3).textSize(60).text("I like GoC! ",1);',
			'  p.fd(100).text("我喜欢GoC!");',
			'  p.fd(100).font("楷体").text("我喜欢GoC!",12,100);',
			"  pause(2);",
			'  p.text("指定点显示",11,50,90,-300,p.getY());',
			"  pause(2); p.o(60,1);",
			"  return 0;",
			"}",
		],
		pic: "media\\p9.png",
	},	
	{
		title: "文字命令(2)---textU,d2s, precision",
		detail: "textU(0/1)设置文字是否随pen的方向。<br>d2s(数字)把数字转为字符串。<br>precision(len)设置输出数字时，保留小数点位数。",
		code : [
			"//程序名：文字方向和数字转换命令测试",
			"int main(){",  		   
			'  p.speed(6).up().textU(0);',
			'  for (int i=20; i<300; i=i+20){',
			'	  p.fd(150).rt(90);',
			'	  int c=i/20;',
			'	  p.font(c).precision(1);',
			'	  p.text("数"+d2s(i/30.0),c,30+c*4);',
			'	  p.lt(90).bk(150).rt(360.0/14);',
			'  }',
			"  return 0;",
			"}",
		],
		pic: "media\\p10.png",
	},		
	{
		title: "图片命令(1)---picL, pic",
		detail: "picL调入图片，有批量调入格式。<br>pic显示图片,可以指定宽和高。",
		code : [
			"//程序名：调入、显示图片命令测试",
			"int main(){",  		   
			'  p.picL(1,"tree.png");',
			'  p.picL(2,4,"bird.png,fox.png,grass.png");',
			'  p.pic(1,400,400).up().fd(200);',
			'  p.pic(2,60,30).bk(380).lt(90);',
			'  for (int i=0;i<6; i++)',
			'   	p.pic(4).fd(40);',
			'  p.pic(-1,3,100,80,60,-20,-150);',
			"  return 0;",
			"}",
		],
		pic: "media\\p11.png",
	},			
	{
		title: "图片命令(2)---picU",
		detail: "picU设置显示图片方向是否随pen的方向旋转。",
		code : [
			"//程序名：设置显示图片的方向命令测试",
			"int main(){",  		   
			'  p.speed(5).up();',
			'  p.picL(1,"car.png");',
			'  int n=10; ',
			'  p.font("仿宋").text("车始终向上",0,30,0,-150,30);',
			'  for (int i=0;i<n; i++)',
			'   	p.fd(100).lt(360.0/n).pic(1,50,100);',
			'  pause(3); p.picU(0).cls();',
			'  p.text("车随笔旋转",1,30,0,-150,30);',
			'  for (int i=0;i<n; i++)',
			'   	p.fd(100).lt(360.0/n).pic(1,50,100);',				  
			"  return 0;",
			"}",
		],
		pic: "media\\p12.png",
	},				
	{
		title: "图片命令(3)---picO,setPath",
		detail: "picO设置显示图片的定位方式：中心、左下角。<br>setPath设置图片在pub目录下的子目录路径。",
		code : [
			"//程序名：设置显示图片定位方式和图片文件路径命令测试",
			"int main(){",  		   
			'  p.speed(5).up();',
			'  p.picL(1,"pen.png");',
			'  p.setPath("lesson1").picL(2,"round.png");',
			'  p.picU(0).pic(2,300,300);',
			'  int n=10;',
			'  for (int i=0;i<n; i++)',
			'      p.lt(360.0/n).pic(1,30,150);',
			'  pause(2);',
			'  p.cls().pic(2,300,300).picO(0);',
			'  for (int i=0;i<n; i++)',
			'       p.lt(360.0/n).pic(1,30,150);',
			"  return 0;",
			"}",
		],
		pic: "media\\p13.png",
	},					
	{
		title: "图片命令(4)---cav",
		detail: "pen.cav( -1/0/1 );选择画布的层。goc有-1,0,1三层。 <br>这个命令对绘图和显示图片都有影响。",
		code : [
			"//程序名：设置画布的层命令测试",
			"int main(){",  		   
			'  p.picL(1,3,"tree2.png,fox.png,grass.png");',
			'  p.cav(-1).pic(1,400,400);',
			'  p.up().hide().cav(1);',
			'  p.moveTo(300,-180).lt(90);',
			'  for (int i=0;i<16; i++)',
			'	 p.pic(3,100,100).fd(40);',
			'  p.cav(0).moveTo(400,-140).speed(10);',
			'   for (int i=0;i<300; i++){',
			'	   wait(0.001);p.clsRec();',
			'	   p.fd(2).pic(2,150,150);',				   
			'   }',
			'  p.moveTo(300,200).cav(1).oo(20,5);',  
			'  p.cav(-1).oo(70,9).cav(0).down();',
			'  for (int i=0; i<6; i++)',
			'    p.c(1).fd(50).bk(50).rt(60);',
			'  pause(2);p.cav(0).cls();//清中间层',
			'  pause(2);p.cav(-1).cls();//清下面层',
			'  pause(2);p.cav(1).cls();//清上面层', 
			"  return 0;",
			"}",
		],
		pic: "media\\p14.png",
	},	
	{
		title: "图片命令(5)---ani",
		detail: "pen.ani( cavId, picId );在cavId画布层，先清屏，再显示第picId号图。<br>增强格式为pen.ani( 图层, 图片,宽度,高度,方向, X坐标,Y坐标)。<br>自动清屏，方便简单的动画。",
		code : [
			"//程序名：动画显示图片命令测试",
			"int main(){",  		   			  
			'  p.picL(1,3,"tree.png,car.png,car1.png");',
			'  p.pic(1,400,400);',
			'  p.up().hide().speed(10);',			  
			'  for (int i=0;i<600; i++){',
			'	  wait(0.001); ',
			'	  p.ani(1,3,70,100,-90,200-i,-180);',
			'	  p.ani(-1,2,70,100,90,i-300,0);',
			'   }',
			 
			"  return 0;",
			"}",
		],
		pic: "media\\p15.png",
	},			
	{
		title: "声音命令(1)---soundL,sound",
		detail: "调入声音文件命令soundL与picL类似。<br>浏览器不支持某些声音文件格式，建议选mp3",
		code : [
			"//程序名：播放声音命令测试",
			"int main(){",  	
			'  p.text("按任意键开始执行",1,40,0,-100,200);',
			'  pause(); p.cls();',			
			'  p.text("播放声音",6,50,0,-200,200);',
			'  p.soundL(2,"rub.mp3");//调入声音文件',
			'  p.sound(2); //播放2号声音',
			'  p.speed(5).size(50);',
			'  p.rt(1200); //转动听声音',   
			 
			"  return 0;",
			"}",
		],
		pic: "media\\p16.png",		
	},						
	{
		title: "声音命令(2)---soundLoop,soundVal...",
		detail: "soundLoop,soundVal,soundPause,soundStop命令测试。	<br>soundLoop(id)循环播放id号声音。<br>soundVal( v ) 设置播放音量比，最大为1，最小为0。<br>soundPause,soundStop暂停、停止播放。",
		code : [
			"//程序名：控制播放声音命令测试",
			"int main(){",  		   			  
			'  p.text("按任意键开始",1,40,0,-100,200);',
			'  pause(); p.cls();',
			'  p.text("背景声音逐渐变小",0,40,0,-100,200);',
			'  p.text("中间有暂停背景声",0,40,0,-100,150);',
			'  p.soundL(2,3,"rub.mp3,mus.wav");//调入声音文件',
			'  p.picL(1,"car.png");//调入图片',
			'  p.soundLoop(3); //播放3号声音',
			'  p.moveTo(-480,-400).speed(3).rt(45);',
			'  p.CH(1); //笔头换成图片',
			'  for (int i=1; i<400; i++){',
			'  	double v= (500.0-i)/500;',
			'  	p.soundVol(3,v);',
			'  	p.fd(2).size(v*3+1);',
			'  	if (i % 100==0){',
			'  		p.soundVol(2,1).sound(2);',
			'  		p.soundPause(3);//暂停背景音乐',
			'  		p.rt(45).fd(50).lt(45);',
			'  		p.soundLoop(3); ////继续背景音乐',
			'  	}',
			'  }',
			'  p.soundStop();',
			'  p.text("停止声音",1,40,0,-100,100);',
			'  p.rt(2000);',
			"  return 0;",
			"}",
		],
		pic: "media\\p17.png",		
	},	
	{
		title: "输入输出命令(1)",
		detail: "cin,cinTitle,cout命令测试。<br>cin从弹出框输入数据,cinTitle是修改弹出框上面的提示语句。<br> cout是在右下角的coutWin窗口输出数据。",
		code : [
			"//程序名：cin,cout命令测试",
			"int main(){",  		   			  
			'  p.text("输入数据作为颜色号。",0,30,0,0,-100);',    
			'  int a;',
			'  cin >> a;',    
			'  p.c(a).size(10).speed(4).rt(0);',
			'  p.text("改提示为[请输入长度：]。",1,30,0,50,20);',
			'  cinTitle("请输入长度：");',
			'  cin >> a;',
			'  p.fd(a).drawH();',
			'  cout <<a ;',
			'  p.text("输出到右下的coutWin窗口。",7,30,0,200,-400);',
			'  p.moveTo(100,-450).setAngle(90);',
			'  p.c(14).size(6).fd(200).rt(45).fd(30);',
			   
			"  return 0;",
			"}",
		],
		pic: "media\\p18.png",
		codeView: "1",
	},	
	{
		title: "输入输出命令(2)---cinWin",
		detail: "cinWin设置输入数据从专门的窗口输入,需要事先编辑好数据。<br> 多次重复输入数据时，特别方便。",
		code : [
			"//程序名：cinWin命令测试",
			"int main(){",  		   			  
			'  p.text("求10个整数的和:",1,30,0,-150,0);',    
			'  cinWin();',
			'  int n,s;',
			'  s=0;',
			'  for (int i=0; i<10; i++){',
			'  	cin >> n;',
			'  	s = s+ n;',
			'  } ',
			'  p.text(s,0,50);',
    			   
			"  return 0;",
			"}",
		],
		pic: "media\\p19.png",
		cin: "1 2 3 4 5 6 7 8 9 10",
		codeView: "1",
	},								
	{
		title: "键盘检测命令---getKey,waitKey...",
		detail: "getKey,waitKey,getDigit,getDownKey命令测试。<br>getkey是获取按键的输入码。<br>waitKey是程序暂停，等待按键继续执行。<br>getDigit,getDownKey是getKey的补充命令。",
		code : [
			"//程序名：键盘检测测试",
			"int main(){",  		   			  
			'  pen.text("按上下左右键绘图",0,35,0,-100,200);',
			'  for( ; ; ){',
			'  	waitKey();',
			'  	int k=getKey();',
			'  	if (k==37) p.lt(10); //左键',
			'  	if (k==38) p.fd(10); //上键',
			'  	if (k==39) p.rt(10); //右键',
			'  	if (k==40) p.bk(10); //下键',
			'  }',
    			   
			"  return 0;",
			"}",
		],
		pic: "media\\p20.png",		
	},		
	{
		title: "鼠标检测命令(1)---waitMouse,getMX,mouseDown...",
		detail: "waitMouse,getMX,getMY,getMDX,getMDY,mouseDown命令测试。<br>getMX,getMY是获取鼠标的坐标值。<br>getMDX,getMDY是获取鼠标按键时的坐标值。<br>mouseDown判断是否有按键，但与waitMouse不同，程序继续执行。",
		code : [
			"//程序名：鼠标的坐标获取测试",
			"int main(){",  		   			  
			'  p.text("点击移动鼠标开始画图",0,40,0,-100,200);',
			'  waitMouse(); ',
			'  p.cls().speed(10);',
			
			'  for (; ; ){',
			'	 if(mouseDown())//按键',
			'		p.moveTo(getMDX(),getMDY()).fd(50).oo(5,1);',
			'	  else //移动',
			'		 p.lineTo(getMX(),getMY()).oo(5,3);  ',
			'	}',
        			   
			"  return 0;",
			"}",
		],
		pic: "media\\p21.png",		
	},	
	{
		title: "鼠标检测命令(2)---mouseIn,mouseDown,cursor",
		detail: "mouseIn(x,y,r)是判断在坐标附近是否有鼠标。<br>mouseIn(x,y,r),mouseDown(x,y,r)是判断在坐标附近是否有鼠标按键。<br>cursor改变光标。",
		code : [
			"//程序名：鼠标的在附近判断测试",
			"int main(){",  		   			  
			'  p.text("圆内外判断",0,40,0,0,-100);',
			'  p.fd(200).o(200).oo(100,1); ',
			'  for(;;){',
			'	 if (mouseIn(0,200,100)){',
			'		 cursor("url(images/goc1.ico),auto");',
			'		 p.moveTo(getMX(),getMY()).oo(5,3);',
			'	 } else if (mouseIn(0,200,200)){',
			'		  cursor("none");',
			'		  p.moveTo(getMX(),getMY()).oo(5,5);',
			'	  } else cursor("crosshair ");',
			'  }',   			   
			"  return 0;",
			"}",
		],
		pic: "media\\p22.png",		
	},
	{
		title: "按钮命令---button,buttonMP,buttonMI",
		detail: "button生成一个简单的按钮。 <br>buttonMP( button mouse press)是判断是否有鼠标按键在指定按钮。 <br>buttonMI( button mouse in or out )是判断是否有鼠标在指定按钮内。",
		code : [
			'//程序名：按钮命令测试',
			'int main(){', 
			'  p.button(1,"鼠标碰到这里画红圆点",10,50,0,0,200,9);',
			'  p.up().bk(200);',
			'  p.button(2,"鼠标点击这里画绿色矩形",2,50);',
			'  p.fd(200).down().c(2).speed(10);',
			'  for (;;){',
			'	  p.rt(1).fd(1);',
			'	  if (buttonMI(1))',
			'		  p.oo(20,1);',
			'	  if (buttonMP(2))',
			'		  p.r(40,60,3);',
			'  }',
			'  return 0;',
			'}',
		],
		pic: "media\\p23.png",		
	},	
	{
		title: "新增命令(1)---alp",
		detail: "alp改变绘图的透明度。<br>对图片也有影响。",
		code : [
			'//程序名：透明度命令测试',
			'int main(){', 
			'  p.speed(6).up();', 
			'  for (int i=1; i<=5; i++)  ',
			'	  p.ee(90,30,i).alp(0.5).rt(360/5.0); ',
			'  p.picL(1,2,"car.png,car1.png").CH(2); ',
			'  for (int i=0; i<360; i++){',
			'	  p.alp(1-i/360.0).rt(1);',
			'  }',
			'  p.hide().picU(0);',
			'  for (int i=0; i<150; i++){',
			'	  p.alp(i/150.0).fd(2);',
			'	  p.ani(1,1);',
			'  }',
			'  return 0;',
			'}',
		],
		pic: "media\\p24.png",		
	},				
	{
		title: "新增命令(2)---a,aa",
		detail: "a,aa是画弧形线和弧形命令。<br>参数使用有点复杂。",
		code : [
			'//程序名：画弧形命令测试',
			'int main(){', 
			'  pen.showXY(1000,1,1).speed(5);',
			'  for (int i=0; i<6; i++)',
			'	 pen.a(100,90,0).rt(60);',
			'  pause(1);',
			'  for (int i=0; i<6; i++)',
			'	 pen.aa(100,90,0).rt(60);',
			'  pause(1);',
			'  pen.size(30);',
			'  for (int i=0; i<6; i++)',
			'	 pen.a(150,60,1,i).rt(60);',
			'  pause(1); p.cls().hide();',   
			'  for (int i=0; i<4; i++)',
			'	 pen.aa(100,180,0,i).rt(90);',
			'  return 0;',
			'}',
		],
		pic: "media\\p25.png",		
	},			
	{
		title: "新增命令(3)---CH,draH",
		detail: "CH(change head)是用图片换笔头，可以简单制作动画。<br>drawH(draw head)是把笔头画到图层上。",
		code : [
			'//程序名：图片换笔头命令测试',
			'int main(){', 
			'	pen.speed(5);',
			'	for (int i=0; i<5; i++) ',
			'		p.c(i).drawH().fd(100).lt(72); ',
				
			'	p.picL(1,"pen.png").CH (1);',  
			'	for (int i=0; i<10; i++)',
			'		p.c(i).size(1+i).drawH().fd(100).rt(36); ',
			'	p.hide();',			
			'  return 0;',
			'}',
		],
		pic: "media\\p26.png",		
	},		
	{
		title: "新增命令(4)---polXY,pol",
		detail: "pol是绘制多边形(polygon)命令，有线和面2种模式。<br>polXY( set polygon XY-coordinate)预设多边形的顶点坐标。",
		code : [
			'//程序名：画多边形测试',
			'int main(){', 
			'	p.polXY(0,80).polXY(80,80).polXY(80,0);',
			'	p.pol(0,0);pause(1);',
			'	p.polXY().polXY(0,0).polXY(-100,100);',
			'	p.polXY(-200,100).polXY(-300,0);',
			'	p.pol(1,3).showXY(50,1,1);',
			'  return 0;',
			'}',
		],
		pic: "media\\p27.png",		
	},	
	{
		title: "新增命令(5)---cap",
		detail: "cap是设置线端形状命令，有0,1,2三种模式。",
		code : [
			'//程序名：设置线端形状测试',
			'int main(){', 
			'   p.size(30).speed(6).hide();', 
			'   p.cap(0).c(0).fd(80).o(50,10).rt(90).fd(80);pause(1);', 
			'   p.cap(1).c(1).fd(80).o(50,10).rt(90).fd(80);pause(1);', 
			'   p.cap(2).c(2).fd(80).o(50,10).rt(90).fd(80);pause(1);', 
			
			'  return 0;',
			'}',
		],
		pic: "media\\p28.png",		
	},								
	{
		title: "新增命令(6)---save,load",
		detail: "save命令把当前笔的颜色、大小、速度、角度、坐标等状态都保存起来；<br>load命令是把save保存的状态恢复。",
		code : [
			'//程序名：保存、恢复pen状态测试',
			'int main(){', 
			'	int n=8;',
			'	for (int i=0; i<n; i++){',
			'		p.fd(150).rt(360.0/n);',
			'		if (i>0 && i<n-2) ',
			'			p.save().c(10).size(1).lineTo(0,0).load();',
			'	}',
 			
			'  return 0;',
			'}',
		],
		pic: "media\\p29.png",		
	},
	{
		title: "新增命令(7)---videoL,videoPlay",
		detail: "播放视频文件。",
		code : [
			'//程序名：视频播放测试',
			'int main(){', 
			'	 p.videoL(1,"lesson1/mov.mp4");',
			'	 p.videoL(2,"lesson1/mov.ogg");',
			'	 p.text("按任意键开始执行",1,40,0,-100,200);',
			'	 pause(); p.cls();',
			'	 p.videoPlay(1,-100,150,300,200,1,0.6);  ',  
			'	 pause(2);',
			'	 p.videoPlay(2,-200,-100,300,200,1,0.5);',
			'	 pause(3);',
			'	 p.text("暂停了播放1",2,30,0,-150,200);',
			'	 p.videoPause(1);',
			'	 pause(3);',
			'	 p.text("恢复了播放1",10,30,0,-150,200,-1);',
			'	 p.videoGo(1);',
			'	 pause(3);',
			'	 p.text("结束了播放2",1,40,0,0,-150); ',    
			'	 p.videoStop(2);',
			'	 pause(10);',
			'  return 0;',
			'}',
		],
		pic: "media\\p30.png",		
	},
	{
		title: "新增命令(8)---getTme",
		detail: "getTime函数获取程序运行到这时一共花了多少秒。",
		code : [
			'//程序名：运行时间函数参数',
			'int main(){', 
			' for (;;){', 
			'	p.font("楷体").text("3秒速记！",1,50,0,0,100);  ',
			'	int a,b,ans;',
			'	a=rand() % 20; b=10+rand() % 60;',
			'	p.font("微软雅黑").text(d2s(a)+"+"+d2s(b)+"=?",0,30,0,-100,0);  ',
			'	double st=getTime();',
			'	for ( ; getTime()-st <3 ;){',
			'		wait(0.1);',
			'		p.hide().clsRec(-30,30,100,100);',
			'		p.text(getTime()-st); //模拟动画',
			'	}',
			'	p.clsRec(-300,50,500,200);',
			'	cinTitle("请输入答案"); ',
			'	cin >> ans;',
			'	if (ans == a+b )',
			'		p.text("答对了！",14,50);',
			'	else',
			'		p.text("答错了！",0,30);',
			'	wait(3); p.cls();',
			' } ',
			'  return 0;',
			'}',
		],
		pic: "media\\p31.png",
	},	
	{
		title: "声音、图片、键盘测试",
		detail: "测试了声音多次播放、循环内的图片平滑。<br>程序显示一个转动的笔。<br> 按左右键会改动笔旋转的方向和速度,有音效。<br>按空格键结束。",
		code : [
			'//程序名：图形声音键盘检测程序',
			'void but( int d ){',
			'	string  sg=" ";',
			'	if (d<0) {sg="-"; d=-d;  }',
			'	string s = d2s(d); ',
			'	if (s.size()<3) s="0"+s;',
			'	if (s.size()<3) s="0"+s;',
			'	p.button(1," 转动角度："+sg+s,2,30,0,0,240,5);    ',
			'}',
			'int main(){ ',
			'	 p.text("左右键调整速度和方向，空格退出",0,40,0,0,300); ',
			'	 int d=1; //旋转角度',
			'	 but(d);',
			'	 p.soundL(1,"rub.mp3");',
			'	 p.picL(7,8,"pen.png,lesson1/round.png");',
			'	 p.ani(-1,8,300,300);',
			'	 p.speed(10).hide().picU(0);//背景图在下面一层',
			'	 for(;;){',
			'		int a=getKey();',
			'		p.rt(d);  ',
			'		p.ani(1,7,30,160); ',
			'		if (a==32) break;//按空格键',
			'		else if (a==37){//按左键',
			'			d--; p.sound(1); but(d); //配旋转音效',
			'		}else if (a==39) { //按右键',
			'			d++;   p.sound(1);but(d);',
			'		}',				  
			'	 }',
			'	 p.size(15).up().c(1);',
			'	 for (int i=0; i<12; i++)',
			'		 p.fd(200).drawH().bk(200).rt(360/12);',
			'  return 0;',
			'}',
		],
		pic: "media\\p32.png",
	},
	{
		title: "按鼠标绘图测试",
		detail: "循环检测鼠标。<br>循环时，有时需要加wait(0.001);是经验技巧",
		code : [
			'//程序名：鼠标画图演示程序',			
			'int main(){ ',
				' p.speed(10).c(1).size(1);   ',
				' for (;;){',
				'	 wait(0.001);//经验技巧         ',
				'	 if (mouseDown()) {',
				'		 p.moveTo(0,0);',
				'		 p.lineTo(getMX(),getMY()).oo(5);',
				'	 }',
				'	 p.rt(1);',
				' }',
				
			'  return 0;',
			'}',
		],
		pic: "media\\p33.png",
		author:"编程狐",
	},		
	//{},{},{},{},
];
